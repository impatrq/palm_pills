CCS PCM C Compiler, Version 4.104, 5967               01-dic.-21 10:23

               Filename: D:\usuarios\alumno\documentos\GitHub\palm_pills\RTOS\rtos.lst

               ROM used: 206 words (3%)
                         Largest free fragment is 2048
               RAM used: 20 (5%) at main() level
                         24 (7%) worst case
               Stack:    3 worst case (1 in main + 2 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   044
0003:  NOP
.................... #include <16F887.h> 
.................... //////// Standard Header file for the PIC16F887 device //////////////// 
.................... #device PIC16F887 
.................... #list 
....................  
.................... #fuses NOMCLR, NOBROWNOUT, NOLVP, INTRC_IO 
.................... #use delay(clock = 8MHz) 
000C:  MOVLW  32
000D:  MOVWF  04
000E:  BCF    03.7
000F:  MOVF   00,W
0010:  BTFSC  03.2
0011:  GOTO   01F
0012:  MOVLW  02
0013:  MOVWF  78
0014:  CLRF   77
0015:  DECFSZ 77,F
0016:  GOTO   015
0017:  DECFSZ 78,F
0018:  GOTO   014
0019:  MOVLW  97
001A:  MOVWF  77
001B:  DECFSZ 77,F
001C:  GOTO   01B
001D:  DECFSZ 00,F
001E:  GOTO   012
001F:  RETURN
.................... #use fast_io(B) 
.................... #use rtos(timer = 0, minor_cycle = 25ms) 
....................     
.................... #task(rate = 250ms, max = 25ms)                  // 1st RTOS task (executed every 250ms) 
.................... void funcion_alarma_1(){ 
....................   output_high(PIN_B2); 
0020:  BSF    06.2
....................   output_high(PIN_B1); 
0021:  BSF    06.1
....................   delay_ms(1000); 
0022:  MOVLW  04
0023:  MOVWF  2F
0024:  MOVLW  FA
0025:  MOVWF  32
0026:  CALL   00C
0027:  DECFSZ 2F,F
0028:  GOTO   024
....................   output_low(PIN_B2); 
0029:  BCF    06.2
....................   output_low(PIN_B1); 
002A:  BCF    06.1
.................... } 
002B:  MOVLW  20
002C:  MOVWF  26
002D:  MOVLW  00
002E:  MOVWF  27
002F:  BCF    0A.3
0030:  BCF    0A.4
0031:  GOTO   0BD
.................... #task(rate = 500ms, max = 25ms)                  // 1st RTOS task (executed every 250ms) 
.................... void funcion_alarma_2(){ 
....................   output_high(PIN_B4); 
0032:  BSF    06.4
....................   output_high(PIN_B3); 
0033:  BSF    06.3
....................   delay_ms(1000); 
0034:  MOVLW  04
0035:  MOVWF  31
0036:  MOVLW  FA
0037:  MOVWF  32
0038:  CALL   00C
0039:  DECFSZ 31,F
003A:  GOTO   036
....................   output_low(PIN_B4); 
003B:  BCF    06.4
....................   output_low(PIN_B3); 
003C:  BCF    06.3
.................... } 
003D:  MOVLW  32
003E:  MOVWF  2D
003F:  MOVLW  00
0040:  MOVWF  2E
0041:  BCF    0A.3
0042:  BCF    0A.4
0043:  GOTO   0BD
.................... void main(){ 
0044:  CLRF   04
0045:  BCF    03.7
0046:  MOVLW  1F
0047:  ANDWF  03,F
0048:  MOVLW  71
0049:  BSF    03.5
004A:  MOVWF  0F
004B:  MOVF   0F,W
004C:  BSF    03.6
004D:  MOVF   09,W
004E:  ANDLW  C0
004F:  MOVWF  09
0050:  BCF    03.6
0051:  BCF    1F.4
0052:  BCF    1F.5
0053:  MOVLW  00
0054:  BSF    03.6
0055:  MOVWF  08
0056:  BCF    03.5
0057:  CLRF   07
0058:  CLRF   08
0059:  CLRF   09
....................     output_b(0); 
005A:  BCF    03.6
005B:  CLRF   06
....................     set_tris_b(0); 
005C:  MOVLW  00
005D:  BSF    03.5
005E:  MOVWF  06
....................     rtos_run(); 
005F:  BCF    03.5
0060:  CLRF   21
0061:  CLRF   23
0062:  MOVLW  0A
0063:  MOVWF  22
0064:  CLRF   25
0065:  CLRF   24
0066:  MOVLW  20
0067:  MOVWF  26
0068:  MOVLW  00
0069:  MOVWF  27
006A:  CLRF   28
006B:  CLRF   2A
006C:  MOVLW  14
006D:  MOVWF  29
006E:  CLRF   2C
006F:  MOVLW  01
0070:  MOVWF  2B
0071:  MOVLW  32
0072:  MOVWF  2D
0073:  MOVLW  00
0074:  MOVWF  2E
0075:  CLRF   20
0076:  BSF    03.5
0077:  MOVF   01,W
0078:  ANDLW  C0
0079:  IORLW  07
007A:  MOVWF  01
007B:  MOVLW  3D
007C:  BCF    03.5
007D:  MOVWF  01
007E:  BCF    0B.2
007F:  BSF    03.5
0080:  MOVF   01,W
0081:  ANDLW  C0
0082:  IORLW  07
0083:  MOVWF  01
0084:  MOVLW  3D
0085:  BCF    03.5
0086:  MOVWF  01
0087:  BCF    0B.2
0088:  BCF    03.0
0089:  RLF    20,W
008A:  MOVWF  77
008B:  CALL   004
008C:  MOVWF  79
008D:  MOVLW  01
008E:  ADDWF  77,W
008F:  CALL   004
0090:  MOVWF  7A
0091:  MOVF   79,W
0092:  MOVWF  04
0093:  BCF    03.7
0094:  BTFSC  7A.0
0095:  BSF    03.7
0096:  MOVF   00,W
0097:  MOVWF  79
0098:  INCF   04,F
0099:  MOVF   00,W
009A:  MOVWF  77
009B:  INCF   04,F
009C:  MOVF   00,W
009D:  MOVWF  78
009E:  INCF   04,F
009F:  INCF   00,F
00A0:  MOVF   00,W
00A1:  MOVWF  7A
00A2:  BTFSS  03.2
00A3:  GOTO   0A7
00A4:  INCF   04,F
00A5:  INCF   00,F
00A6:  DECF   04,F
00A7:  INCF   04,F
00A8:  MOVF   00,W
00A9:  SUBWF  78,W
00AA:  BTFSS  03.2
00AB:  GOTO   0BF
00AC:  MOVF   77,W
00AD:  SUBWF  7A,W
00AE:  BTFSS  03.2
00AF:  GOTO   0BF
00B0:  DECF   04,F
00B1:  CLRF   00
00B2:  INCF   04,F
00B3:  CLRF   00
00B4:  INCF   04,F
00B5:  BTFSC  79.7
00B6:  GOTO   0BF
00B7:  INCF   04,F
00B8:  MOVF   00,W
00B9:  MOVWF  0A
00BA:  DECF   04,F
00BB:  MOVF   00,W
00BC:  MOVWF  02
00BD:  BCF    03.5
00BE:  BCF    03.6
00BF:  INCF   20,F
00C0:  MOVLW  02
00C1:  SUBWF  20,W
00C2:  BTFSS  03.2
00C3:  GOTO   088
00C4:  CLRF   20
00C5:  MOVF   01,W
00C6:  BTFSS  0B.2
00C7:  GOTO   0CA
00C8:  BSF    03.5
00C9:  GOTO   084
00CA:  GOTO   0C5
00CB:  MOVLW  FF
00CC:  MOVWF  20
.................... } 
00CD:  SLEEP

Configuration Fuses:
   Word  1: 2CC4   INTRC_IO NOWDT PUT NOMCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   NOWRT BORV40

CCS PCM C Compiler, Version 4.104, 5967               01-dic.-21 09:30

               Filename: D:\usuarios\alumno\documentos\GitHub\palm_pills\RTOS\rtos.lst

               ROM used: 203 words (2%)
                         Largest free fragment is 2048
               RAM used: 20 (5%) at main() level
                         24 (7%) worst case
               Stack:    3 worst case (1 in main + 2 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   041
0003:  NOP
.................... #include <16F887.h> 
.................... //////// Standard Header file for the PIC16F887 device //////////////// 
.................... #device PIC16F887 
.................... #list 
....................  
.................... #fuses NOMCLR, NOBROWNOUT, NOLVP, INTRC_IO 
.................... #use delay(clock = 4MHz) 
000C:  MOVLW  32
000D:  MOVWF  04
000E:  BCF    03.7
000F:  MOVF   00,W
0010:  BTFSC  03.2
0011:  GOTO   020
0012:  MOVLW  01
0013:  MOVWF  78
0014:  CLRF   77
0015:  DECFSZ 77,F
0016:  GOTO   015
0017:  DECFSZ 78,F
0018:  GOTO   014
0019:  MOVLW  4A
001A:  MOVWF  77
001B:  DECFSZ 77,F
001C:  GOTO   01B
001D:  GOTO   01E
001E:  DECFSZ 00,F
001F:  GOTO   012
0020:  RETURN
.................... #use fast_io(B) 
.................... #use rtos(timer = 0, minor_cycle = 25ms) 
....................  
.................... #task(rate = 100ms, max = 25ms)                  // 1st RTOS task (executed every 250ms) 
.................... void led1(){ 
....................   output_high(PIN_B0); 
0021:  BSF    06.0
....................   delay_ms(1000); 
0022:  MOVLW  04
0023:  MOVWF  2F
0024:  MOVLW  FA
0025:  MOVWF  32
0026:  CALL   00C
0027:  DECFSZ 2F,F
0028:  GOTO   024
....................   output_low(PIN_B0); 
0029:  BCF    06.0
.................... } 
002A:  MOVLW  21
002B:  MOVWF  26
002C:  MOVLW  00
002D:  MOVWF  27
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   0BA
....................  
.................... #task(rate = 200ms max = 25ms) 
.................... void buzzer(){ 
....................     output_high(PIN_B1); 
0031:  BSF    06.1
....................     delay_ms(1000); 
0032:  MOVLW  04
0033:  MOVWF  31
0034:  MOVLW  FA
0035:  MOVWF  32
0036:  CALL   00C
0037:  DECFSZ 31,F
0038:  GOTO   034
....................     output_low(PIN_B1); 
0039:  BCF    06.1
.................... } 
003A:  MOVLW  31
003B:  MOVWF  2D
003C:  MOVLW  00
003D:  MOVWF  2E
003E:  BCF    0A.3
003F:  BCF    0A.4
0040:  GOTO   0BA
.................... void main(){ 
0041:  CLRF   04
0042:  BCF    03.7
0043:  MOVLW  1F
0044:  ANDWF  03,F
0045:  MOVLW  61
0046:  BSF    03.5
0047:  MOVWF  0F
0048:  MOVF   0F,W
0049:  BSF    03.6
004A:  MOVF   09,W
004B:  ANDLW  C0
004C:  MOVWF  09
004D:  BCF    03.6
004E:  BCF    1F.4
004F:  BCF    1F.5
0050:  MOVLW  00
0051:  BSF    03.6
0052:  MOVWF  08
0053:  BCF    03.5
0054:  CLRF   07
0055:  CLRF   08
0056:  CLRF   09
....................  
....................     output_b(0); 
0057:  BCF    03.6
0058:  CLRF   06
....................     set_tris_b(0); 
0059:  MOVLW  00
005A:  BSF    03.5
005B:  MOVWF  06
....................     rtos_run(); 
005C:  BCF    03.5
005D:  CLRF   21
005E:  CLRF   23
005F:  MOVLW  04
0060:  MOVWF  22
0061:  CLRF   25
0062:  CLRF   24
0063:  MOVLW  21
0064:  MOVWF  26
0065:  MOVLW  00
0066:  MOVWF  27
0067:  CLRF   28
0068:  CLRF   2A
0069:  MOVLW  08
006A:  MOVWF  29
006B:  CLRF   2C
006C:  MOVLW  01
006D:  MOVWF  2B
006E:  MOVLW  31
006F:  MOVWF  2D
0070:  MOVLW  00
0071:  MOVWF  2E
0072:  CLRF   20
0073:  BSF    03.5
0074:  MOVF   01,W
0075:  ANDLW  C0
0076:  IORLW  06
0077:  MOVWF  01
0078:  MOVLW  3D
0079:  BCF    03.5
007A:  MOVWF  01
007B:  BCF    0B.2
007C:  BSF    03.5
007D:  MOVF   01,W
007E:  ANDLW  C0
007F:  IORLW  06
0080:  MOVWF  01
0081:  MOVLW  3D
0082:  BCF    03.5
0083:  MOVWF  01
0084:  BCF    0B.2
0085:  BCF    03.0
0086:  RLF    20,W
0087:  MOVWF  77
0088:  CALL   004
0089:  MOVWF  79
008A:  MOVLW  01
008B:  ADDWF  77,W
008C:  CALL   004
008D:  MOVWF  7A
008E:  MOVF   79,W
008F:  MOVWF  04
0090:  BCF    03.7
0091:  BTFSC  7A.0
0092:  BSF    03.7
0093:  MOVF   00,W
0094:  MOVWF  79
0095:  INCF   04,F
0096:  MOVF   00,W
0097:  MOVWF  77
0098:  INCF   04,F
0099:  MOVF   00,W
009A:  MOVWF  78
009B:  INCF   04,F
009C:  INCF   00,F
009D:  MOVF   00,W
009E:  MOVWF  7A
009F:  BTFSS  03.2
00A0:  GOTO   0A4
00A1:  INCF   04,F
00A2:  INCF   00,F
00A3:  DECF   04,F
00A4:  INCF   04,F
00A5:  MOVF   00,W
00A6:  SUBWF  78,W
00A7:  BTFSS  03.2
00A8:  GOTO   0BC
00A9:  MOVF   77,W
00AA:  SUBWF  7A,W
00AB:  BTFSS  03.2
00AC:  GOTO   0BC
00AD:  DECF   04,F
00AE:  CLRF   00
00AF:  INCF   04,F
00B0:  CLRF   00
00B1:  INCF   04,F
00B2:  BTFSC  79.7
00B3:  GOTO   0BC
00B4:  INCF   04,F
00B5:  MOVF   00,W
00B6:  MOVWF  0A
00B7:  DECF   04,F
00B8:  MOVF   00,W
00B9:  MOVWF  02
00BA:  BCF    03.5
00BB:  BCF    03.6
00BC:  INCF   20,F
00BD:  MOVLW  02
00BE:  SUBWF  20,W
00BF:  BTFSS  03.2
00C0:  GOTO   085
00C1:  CLRF   20
00C2:  MOVF   01,W
00C3:  BTFSS  0B.2
00C4:  GOTO   0C7
00C5:  BSF    03.5
00C6:  GOTO   081
00C7:  GOTO   0C2
00C8:  MOVLW  FF
00C9:  MOVWF  20
.................... } 
00CA:  SLEEP

Configuration Fuses:
   Word  1: 2CC4   INTRC_IO NOWDT PUT NOMCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   NOWRT BORV40
